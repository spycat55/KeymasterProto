// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: api_webrtc/proto/v1/hash_file.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HashFile 定义文件哈希结构
// block_length = 1 MiB
// 不使用文件名，保证一个文件的 hashfile 的 hash 肯定一样
// 最后一个 block 可能小于 1 MiB，用零补齐后面空格，保证 hash 一致性
type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MagicNumber   uint32                 `protobuf:"fixed32,1,opt,name=magic_number,json=magicNumber,proto3" json:"magic_number,omitempty"` // MAGIC_NUMBER = 0x4B455950  # "FILE" 的十六进制值，也代表版本
	Length        uint64                 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`                               // 文件总长度
	Blocks        [][]byte               `protobuf:"bytes,3,rep,name=blocks,proto3" json:"blocks,omitempty"`                                // 哈希块
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_hash_file_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetMagicNumber() uint32 {
	if x != nil {
		return x.MagicNumber
	}
	return 0
}

func (x *Block) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Block) GetBlocks() [][]byte {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Live struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	MagicNumber uint32                 `protobuf:"fixed32,1,opt,name=magic_number,json=magicNumber,proto3" json:"magic_number,omitempty"` // MAGIC_NUMBER = 0x4B455950  # "LIVE" 的十六进制值，也代表版本
	Type        string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                    // 类型
	PublicKey   []byte                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`         // 公钥
	Channel     []byte                 `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`                              // 频道名称
	// 块大小
	BlockLength   uint32 `protobuf:"fixed32,5,opt,name=block_length,json=blockLength,proto3" json:"block_length,omitempty"` // block_length = 1 MiB
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Live) Reset() {
	*x = Live{}
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Live) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Live) ProtoMessage() {}

func (x *Live) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Live.ProtoReflect.Descriptor instead.
func (*Live) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_hash_file_proto_rawDescGZIP(), []int{1}
}

func (x *Live) GetMagicNumber() uint32 {
	if x != nil {
		return x.MagicNumber
	}
	return 0
}

func (x *Live) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Live) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Live) GetChannel() []byte {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *Live) GetBlockLength() uint32 {
	if x != nil {
		return x.BlockLength
	}
	return 0
}

type LiveShell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Live          *Live                  `protobuf:"bytes,1,opt,name=live,proto3" json:"live,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiveShell) Reset() {
	*x = LiveShell{}
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveShell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveShell) ProtoMessage() {}

func (x *LiveShell) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveShell.ProtoReflect.Descriptor instead.
func (*LiveShell) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_hash_file_proto_rawDescGZIP(), []int{2}
}

func (x *LiveShell) GetLive() *Live {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *LiveShell) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type LiveBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LiveHash      []byte                 `protobuf:"bytes,1,opt,name=live_hash,json=liveHash,proto3" json:"live_hash,omitempty"`
	PrevHash      []byte                 `protobuf:"bytes,2,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"` // 前序块，指的是 LiveBlockShell 的 hash
	Length        uint32                 `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`                    // 块大小,最后一个块的 length 可能小于 block_length
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                         // data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiveBlock) Reset() {
	*x = LiveBlock{}
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveBlock) ProtoMessage() {}

func (x *LiveBlock) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveBlock.ProtoReflect.Descriptor instead.
func (*LiveBlock) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_hash_file_proto_rawDescGZIP(), []int{3}
}

func (x *LiveBlock) GetLiveHash() []byte {
	if x != nil {
		return x.LiveHash
	}
	return nil
}

func (x *LiveBlock) GetPrevHash() []byte {
	if x != nil {
		return x.PrevHash
	}
	return nil
}

func (x *LiveBlock) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *LiveBlock) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type LiveBlockShell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LiveBlock     *LiveBlock             `protobuf:"bytes,1,opt,name=live_block,json=liveBlock,proto3" json:"live_block,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LiveBlockShell) Reset() {
	*x = LiveBlockShell{}
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveBlockShell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveBlockShell) ProtoMessage() {}

func (x *LiveBlockShell) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_hash_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveBlockShell.ProtoReflect.Descriptor instead.
func (*LiveBlockShell) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_hash_file_proto_rawDescGZIP(), []int{4}
}

func (x *LiveBlockShell) GetLiveBlock() *LiveBlock {
	if x != nil {
		return x.LiveBlock
	}
	return nil
}

func (x *LiveBlockShell) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_api_webrtc_proto_v1_hash_file_proto protoreflect.FileDescriptor

const file_api_webrtc_proto_v1_hash_file_proto_rawDesc = "" +
	"\n" +
	"#api_webrtc/proto/v1/hash_file.proto\x12\rapi.webrtc.v1\"Z\n" +
	"\x05Block\x12!\n" +
	"\fmagic_number\x18\x01 \x01(\aR\vmagicNumber\x12\x16\n" +
	"\x06length\x18\x02 \x01(\x04R\x06length\x12\x16\n" +
	"\x06blocks\x18\x03 \x03(\fR\x06blocks\"\x99\x01\n" +
	"\x04Live\x12!\n" +
	"\fmagic_number\x18\x01 \x01(\aR\vmagicNumber\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\fR\tpublicKey\x12\x18\n" +
	"\achannel\x18\x04 \x01(\fR\achannel\x12!\n" +
	"\fblock_length\x18\x05 \x01(\aR\vblockLength\"R\n" +
	"\tLiveShell\x12'\n" +
	"\x04live\x18\x01 \x01(\v2\x13.api.webrtc.v1.LiveR\x04live\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"q\n" +
	"\tLiveBlock\x12\x1b\n" +
	"\tlive_hash\x18\x01 \x01(\fR\bliveHash\x12\x1b\n" +
	"\tprev_hash\x18\x02 \x01(\fR\bprevHash\x12\x16\n" +
	"\x06length\x18\x03 \x01(\rR\x06length\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\"g\n" +
	"\x0eLiveBlockShell\x127\n" +
	"\n" +
	"live_block\x18\x01 \x01(\v2\x18.api.webrtc.v1.LiveBlockR\tliveBlock\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignatureB6Z4github.com/bitcoin-sv/KeyRTCServer/api_webrtc/gen/v1b\x06proto3"

var (
	file_api_webrtc_proto_v1_hash_file_proto_rawDescOnce sync.Once
	file_api_webrtc_proto_v1_hash_file_proto_rawDescData []byte
)

func file_api_webrtc_proto_v1_hash_file_proto_rawDescGZIP() []byte {
	file_api_webrtc_proto_v1_hash_file_proto_rawDescOnce.Do(func() {
		file_api_webrtc_proto_v1_hash_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_webrtc_proto_v1_hash_file_proto_rawDesc), len(file_api_webrtc_proto_v1_hash_file_proto_rawDesc)))
	})
	return file_api_webrtc_proto_v1_hash_file_proto_rawDescData
}

var file_api_webrtc_proto_v1_hash_file_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_webrtc_proto_v1_hash_file_proto_goTypes = []any{
	(*Block)(nil),          // 0: api.webrtc.v1.Block
	(*Live)(nil),           // 1: api.webrtc.v1.Live
	(*LiveShell)(nil),      // 2: api.webrtc.v1.LiveShell
	(*LiveBlock)(nil),      // 3: api.webrtc.v1.LiveBlock
	(*LiveBlockShell)(nil), // 4: api.webrtc.v1.LiveBlockShell
}
var file_api_webrtc_proto_v1_hash_file_proto_depIdxs = []int32{
	1, // 0: api.webrtc.v1.LiveShell.live:type_name -> api.webrtc.v1.Live
	3, // 1: api.webrtc.v1.LiveBlockShell.live_block:type_name -> api.webrtc.v1.LiveBlock
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_webrtc_proto_v1_hash_file_proto_init() }
func file_api_webrtc_proto_v1_hash_file_proto_init() {
	if File_api_webrtc_proto_v1_hash_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_webrtc_proto_v1_hash_file_proto_rawDesc), len(file_api_webrtc_proto_v1_hash_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_webrtc_proto_v1_hash_file_proto_goTypes,
		DependencyIndexes: file_api_webrtc_proto_v1_hash_file_proto_depIdxs,
		MessageInfos:      file_api_webrtc_proto_v1_hash_file_proto_msgTypes,
	}.Build()
	File_api_webrtc_proto_v1_hash_file_proto = out.File
	file_api_webrtc_proto_v1_hash_file_proto_goTypes = nil
	file_api_webrtc_proto_v1_hash_file_proto_depIdxs = nil
}
