// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: api_webrtc/proto/v1/message.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 付费
type CostPoolUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseTxId       []byte                 `protobuf:"bytes,1,opt,name=base_tx_id,json=baseTxId,proto3" json:"base_tx_id,omitempty"`                  // 基础交易
	Signature      []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`                                  // 签名
	SequenceNumber uint32                 `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"` // 序列号
	Amount         uint64                 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`                                       // 金额
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CostPoolUpdate) Reset() {
	*x = CostPoolUpdate{}
	mi := &file_api_webrtc_proto_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CostPoolUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostPoolUpdate) ProtoMessage() {}

func (x *CostPoolUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostPoolUpdate.ProtoReflect.Descriptor instead.
func (*CostPoolUpdate) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *CostPoolUpdate) GetBaseTxId() []byte {
	if x != nil {
		return x.BaseTxId
	}
	return nil
}

func (x *CostPoolUpdate) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CostPoolUpdate) GetSequenceNumber() uint32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *CostPoolUpdate) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type MessageMain struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	MessageType              string                 `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // shake_hand, signaling, response, message_text
	Timestamp                *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                     []byte                 `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
	CostPoolUpdate           *CostPoolUpdate        `protobuf:"bytes,4,opt,name=cost_pool_update,json=costPoolUpdate,proto3,oneof" json:"cost_pool_update,omitempty"`
	ForwardPublickey         []byte                 `protobuf:"bytes,5,opt,name=forward_publickey,json=forwardPublickey,proto3,oneof" json:"forward_publickey,omitempty"`                             // 转发的公钥
	PreviousShellMessageHash []byte                 `protobuf:"bytes,6,opt,name=previous_shell_message_hash,json=previousShellMessageHash,proto3,oneof" json:"previous_shell_message_hash,omitempty"` // 回复消息，使用的前序消息 hash
	ErrorMessage             *string                `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`                                         // 回复消息，错误
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *MessageMain) Reset() {
	*x = MessageMain{}
	mi := &file_api_webrtc_proto_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMain) ProtoMessage() {}

func (x *MessageMain) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMain.ProtoReflect.Descriptor instead.
func (*MessageMain) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *MessageMain) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *MessageMain) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MessageMain) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MessageMain) GetCostPoolUpdate() *CostPoolUpdate {
	if x != nil {
		return x.CostPoolUpdate
	}
	return nil
}

func (x *MessageMain) GetForwardPublickey() []byte {
	if x != nil {
		return x.ForwardPublickey
	}
	return nil
}

func (x *MessageMain) GetPreviousShellMessageHash() []byte {
	if x != nil {
		return x.PreviousShellMessageHash
	}
	return nil
}

func (x *MessageMain) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

// 转发消息
type MessageShell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageMain   []byte                 `protobuf:"bytes,1,opt,name=message_main,json=messageMain,proto3,oneof" json:"message_main,omitempty"`       // shake_hand 就没有 Data
	DataSignature []byte                 `protobuf:"bytes,2,opt,name=data_signature,json=dataSignature,proto3,oneof" json:"data_signature,omitempty"` // 如果是公开的，就有签名，否则没有，签data的名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageShell) Reset() {
	*x = MessageShell{}
	mi := &file_api_webrtc_proto_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageShell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageShell) ProtoMessage() {}

func (x *MessageShell) ProtoReflect() protoreflect.Message {
	mi := &file_api_webrtc_proto_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageShell.ProtoReflect.Descriptor instead.
func (*MessageShell) Descriptor() ([]byte, []int) {
	return file_api_webrtc_proto_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *MessageShell) GetMessageMain() []byte {
	if x != nil {
		return x.MessageMain
	}
	return nil
}

func (x *MessageShell) GetDataSignature() []byte {
	if x != nil {
		return x.DataSignature
	}
	return nil
}

var File_api_webrtc_proto_v1_message_proto protoreflect.FileDescriptor

const file_api_webrtc_proto_v1_message_proto_rawDesc = "" +
	"\n" +
	"!api_webrtc/proto/v1/message.proto\x12\rapi.webrtc.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8d\x01\n" +
	"\x0eCostPoolUpdate\x12\x1c\n" +
	"\n" +
	"base_tx_id\x18\x01 \x01(\fR\bbaseTxId\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\rR\x0esequenceNumber\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x04R\x06amount\"\xd7\x03\n" +
	"\vMessageMain\x12!\n" +
	"\fmessage_type\x18\x01 \x01(\tR\vmessageType\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x17\n" +
	"\x04data\x18\x03 \x01(\fH\x00R\x04data\x88\x01\x01\x12L\n" +
	"\x10cost_pool_update\x18\x04 \x01(\v2\x1d.api.webrtc.v1.CostPoolUpdateH\x01R\x0ecostPoolUpdate\x88\x01\x01\x120\n" +
	"\x11forward_publickey\x18\x05 \x01(\fH\x02R\x10forwardPublickey\x88\x01\x01\x12B\n" +
	"\x1bprevious_shell_message_hash\x18\x06 \x01(\fH\x03R\x18previousShellMessageHash\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\a \x01(\tH\x04R\ferrorMessage\x88\x01\x01B\a\n" +
	"\x05_dataB\x13\n" +
	"\x11_cost_pool_updateB\x14\n" +
	"\x12_forward_publickeyB\x1e\n" +
	"\x1c_previous_shell_message_hashB\x10\n" +
	"\x0e_error_message\"\x86\x01\n" +
	"\fMessageShell\x12&\n" +
	"\fmessage_main\x18\x01 \x01(\fH\x00R\vmessageMain\x88\x01\x01\x12*\n" +
	"\x0edata_signature\x18\x02 \x01(\fH\x01R\rdataSignature\x88\x01\x01B\x0f\n" +
	"\r_message_mainB\x11\n" +
	"\x0f_data_signatureB6Z4github.com/bitcoin-sv/KeyRTCServer/api_webrtc/gen/v1b\x06proto3"

var (
	file_api_webrtc_proto_v1_message_proto_rawDescOnce sync.Once
	file_api_webrtc_proto_v1_message_proto_rawDescData []byte
)

func file_api_webrtc_proto_v1_message_proto_rawDescGZIP() []byte {
	file_api_webrtc_proto_v1_message_proto_rawDescOnce.Do(func() {
		file_api_webrtc_proto_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_webrtc_proto_v1_message_proto_rawDesc), len(file_api_webrtc_proto_v1_message_proto_rawDesc)))
	})
	return file_api_webrtc_proto_v1_message_proto_rawDescData
}

var file_api_webrtc_proto_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_webrtc_proto_v1_message_proto_goTypes = []any{
	(*CostPoolUpdate)(nil),        // 0: api.webrtc.v1.CostPoolUpdate
	(*MessageMain)(nil),           // 1: api.webrtc.v1.MessageMain
	(*MessageShell)(nil),          // 2: api.webrtc.v1.MessageShell
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_api_webrtc_proto_v1_message_proto_depIdxs = []int32{
	3, // 0: api.webrtc.v1.MessageMain.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: api.webrtc.v1.MessageMain.cost_pool_update:type_name -> api.webrtc.v1.CostPoolUpdate
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_webrtc_proto_v1_message_proto_init() }
func file_api_webrtc_proto_v1_message_proto_init() {
	if File_api_webrtc_proto_v1_message_proto != nil {
		return
	}
	file_api_webrtc_proto_v1_message_proto_msgTypes[1].OneofWrappers = []any{}
	file_api_webrtc_proto_v1_message_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_webrtc_proto_v1_message_proto_rawDesc), len(file_api_webrtc_proto_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_webrtc_proto_v1_message_proto_goTypes,
		DependencyIndexes: file_api_webrtc_proto_v1_message_proto_depIdxs,
		MessageInfos:      file_api_webrtc_proto_v1_message_proto_msgTypes,
	}.Build()
	File_api_webrtc_proto_v1_message_proto = out.File
	file_api_webrtc_proto_v1_message_proto_goTypes = nil
	file_api_webrtc_proto_v1_message_proto_depIdxs = nil
}
