syntax = "proto3";

package api.webrtc.v1;
import "google/protobuf/timestamp.proto";

option go_package = "github.com/bitcoin-sv/KeyRTCServer/api_webrtc/gen/v1";

// ------------------ 通用枚举与错误码 ------------------

enum MsgKind {
  KIND_UNSPECIFIED = 0;
  KIND_ERROR = 1;
  KIND_WS_SIGNALING = 2;
//   KIND_RTC_FILE_QUOTE = 3;
//   KIND_RTC_FILE_CONTENT = 4;
}

// ErrorCode 改用字符串，不再定义枚举。请在 ErrorReply.error_code 字段中填入具体错误字符串。

// ------------------ 核心协议结构 ------------------

message Header {
  MsgKind kind = 1;
  string message_id = 2;          // 全局唯一 ID
  string correlation_id = 3;      // 关联请求/响应 ID
  google.protobuf.Timestamp ts = 4; // 发送时间
  bytes from_pubkey = 5;          // 发送方公钥
  bytes to_pubkey = 6;            // 接收方公钥
}

message Envelope {
  uint32 version = 1; // 协议版本
  Header header = 2;

  // 安全字段（必填）
  bytes signature = 3;
  string signature_algo = 4; // 如 "ECDSA_P256_SHA256"

  oneof payload {
    ErrorReply error_reply = 5;
    WSSignaling ws_signaling = 6;
    // RTCFileQuote rtc_file_quote = 7;
    // RTCFileContent rtc_file_content = 8;
  }
}

// ------------------ 控制与通用业务消息 ------------------

message ErrorReply {
  string error_code = 1; // 字符串形式的错误码
  string detail = 2;
}

message WSSignaling {
  string signaling_type = 1; // offer, candidate
  bytes data = 2;            // SDP / ICE / 其他
}

// ------------------ 费用池 / 支付 ------------------

// ------------------ 文件相关 ------------------

// ------------------ RTC 文件报价/内容 ------------------

// message RTCFileQuote {
//   bytes FileHash = 1;
//   repeated string FileName = 2;
//   uint64 FileSize = 3;
//   uint64 MetadataPrice = 4;
//   uint64 Price = 5;
// }

// message RTCFileContent {
//   bytes FileHash = 1;
//   bytes FileContent = 2;
// }

// ------------------ 广播与交易 ------------------
