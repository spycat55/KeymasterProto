// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: message_fee_pool.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateFeePool 定义创建费用池请求
type CreateFeePool struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tx            []byte                 `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`               // 交易的十六进制表示
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // client签名
	Amount        uint64                 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`      // 金额
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFeePool) Reset() {
	*x = CreateFeePool{}
	mi := &file_message_fee_pool_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFeePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeePool) ProtoMessage() {}

func (x *CreateFeePool) ProtoReflect() protoreflect.Message {
	mi := &file_message_fee_pool_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeePool.ProtoReflect.Descriptor instead.
func (*CreateFeePool) Descriptor() ([]byte, []int) {
	return file_message_fee_pool_proto_rawDescGZIP(), []int{0}
}

func (x *CreateFeePool) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *CreateFeePool) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CreateFeePool) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// CreateFeePoolResponse 定义创建费用池响应
type CreateFeePoolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PreviousID    []byte                 `protobuf:"bytes,1,opt,name=previousID,proto3" json:"previousID,omitempty"` // 前序ID
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`   // server签名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFeePoolResponse) Reset() {
	*x = CreateFeePoolResponse{}
	mi := &file_message_fee_pool_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFeePoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeePoolResponse) ProtoMessage() {}

func (x *CreateFeePoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_fee_pool_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeePoolResponse.ProtoReflect.Descriptor instead.
func (*CreateFeePoolResponse) Descriptor() ([]byte, []int) {
	return file_message_fee_pool_proto_rawDescGZIP(), []int{1}
}

func (x *CreateFeePoolResponse) GetPreviousID() []byte {
	if x != nil {
		return x.PreviousID
	}
	return nil
}

func (x *CreateFeePoolResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CommandFee struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PreviousID     []byte                 `protobuf:"bytes,1,opt,name=previousID,proto3" json:"previousID,omitempty"`         // 前序ID
	Signature      []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`           // client签名
	SequenceNumber []byte                 `protobuf:"bytes,3,opt,name=sequenceNumber,proto3" json:"sequenceNumber,omitempty"` // s equenceNumber
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CommandFee) Reset() {
	*x = CommandFee{}
	mi := &file_message_fee_pool_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandFee) ProtoMessage() {}

func (x *CommandFee) ProtoReflect() protoreflect.Message {
	mi := &file_message_fee_pool_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandFee.ProtoReflect.Descriptor instead.
func (*CommandFee) Descriptor() ([]byte, []int) {
	return file_message_fee_pool_proto_rawDescGZIP(), []int{2}
}

func (x *CommandFee) GetPreviousID() []byte {
	if x != nil {
		return x.PreviousID
	}
	return nil
}

func (x *CommandFee) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CommandFee) GetSequenceNumber() []byte {
	if x != nil {
		return x.SequenceNumber
	}
	return nil
}

// A. 关闭费用池 send 内容直接就是发送报文，所以没有结构
// B. ResponseCloseFeePool 定义关闭费用池响应
type ResponseCloseFeePool struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`  // client签名
	UseAmount     uint64                 `protobuf:"varint,2,opt,name=useAmount,proto3" json:"useAmount,omitempty"` // useAmount
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseCloseFeePool) Reset() {
	*x = ResponseCloseFeePool{}
	mi := &file_message_fee_pool_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseCloseFeePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCloseFeePool) ProtoMessage() {}

func (x *ResponseCloseFeePool) ProtoReflect() protoreflect.Message {
	mi := &file_message_fee_pool_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCloseFeePool.ProtoReflect.Descriptor instead.
func (*ResponseCloseFeePool) Descriptor() ([]byte, []int) {
	return file_message_fee_pool_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseCloseFeePool) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ResponseCloseFeePool) GetUseAmount() uint64 {
	if x != nil {
		return x.UseAmount
	}
	return 0
}

var File_message_fee_pool_proto protoreflect.FileDescriptor

const file_message_fee_pool_proto_rawDesc = "" +
	"\n" +
	"\x16message_fee_pool.proto\x12\rapi.webrtc.v1\"U\n" +
	"\rCreateFeePool\x12\x0e\n" +
	"\x02tx\x18\x01 \x01(\fR\x02tx\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x04R\x06amount\"U\n" +
	"\x15CreateFeePoolResponse\x12\x1e\n" +
	"\n" +
	"previousID\x18\x01 \x01(\fR\n" +
	"previousID\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"r\n" +
	"\n" +
	"CommandFee\x12\x1e\n" +
	"\n" +
	"previousID\x18\x01 \x01(\fR\n" +
	"previousID\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12&\n" +
	"\x0esequenceNumber\x18\x03 \x01(\fR\x0esequenceNumber\"R\n" +
	"\x14ResponseCloseFeePool\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\x12\x1c\n" +
	"\tuseAmount\x18\x02 \x01(\x04R\tuseAmountB6Z4github.com/bitcoin-sv/KeyRTCServer/api_webrtc/gen/v1b\x06proto3"

var (
	file_message_fee_pool_proto_rawDescOnce sync.Once
	file_message_fee_pool_proto_rawDescData []byte
)

func file_message_fee_pool_proto_rawDescGZIP() []byte {
	file_message_fee_pool_proto_rawDescOnce.Do(func() {
		file_message_fee_pool_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_fee_pool_proto_rawDesc), len(file_message_fee_pool_proto_rawDesc)))
	})
	return file_message_fee_pool_proto_rawDescData
}

var file_message_fee_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_message_fee_pool_proto_goTypes = []any{
	(*CreateFeePool)(nil),         // 0: api.webrtc.v1.CreateFeePool
	(*CreateFeePoolResponse)(nil), // 1: api.webrtc.v1.CreateFeePoolResponse
	(*CommandFee)(nil),            // 2: api.webrtc.v1.CommandFee
	(*ResponseCloseFeePool)(nil),  // 3: api.webrtc.v1.ResponseCloseFeePool
}
var file_message_fee_pool_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_fee_pool_proto_init() }
func file_message_fee_pool_proto_init() {
	if File_message_fee_pool_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_fee_pool_proto_rawDesc), len(file_message_fee_pool_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_fee_pool_proto_goTypes,
		DependencyIndexes: file_message_fee_pool_proto_depIdxs,
		MessageInfos:      file_message_fee_pool_proto_msgTypes,
	}.Build()
	File_message_fee_pool_proto = out.File
	file_message_fee_pool_proto_goTypes = nil
	file_message_fee_pool_proto_depIdxs = nil
}
