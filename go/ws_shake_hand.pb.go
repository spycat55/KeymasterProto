// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.1
// source: ws_shake_hand.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Server 定义消息结构
type ShakeHandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShakeHandResponse) Reset() {
	*x = ShakeHandResponse{}
	mi := &file_ws_shake_hand_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShakeHandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShakeHandResponse) ProtoMessage() {}

func (x *ShakeHandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ws_shake_hand_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShakeHandResponse.ProtoReflect.Descriptor instead.
func (*ShakeHandResponse) Descriptor() ([]byte, []int) {
	return file_ws_shake_hand_proto_rawDescGZIP(), []int{0}
}

func (x *ShakeHandResponse) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ShakeHandResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// node2node 定义消息结构
type ShakeHand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShakeHand) Reset() {
	*x = ShakeHand{}
	mi := &file_ws_shake_hand_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShakeHand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShakeHand) ProtoMessage() {}

func (x *ShakeHand) ProtoReflect() protoreflect.Message {
	mi := &file_ws_shake_hand_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShakeHand.ProtoReflect.Descriptor instead.
func (*ShakeHand) Descriptor() ([]byte, []int) {
	return file_ws_shake_hand_proto_rawDescGZIP(), []int{1}
}

func (x *ShakeHand) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ShakeHand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_ws_shake_hand_proto protoreflect.FileDescriptor

const file_ws_shake_hand_proto_rawDesc = "" +
	"\n" +
	"\x13ws_shake_hand.proto\x12\rapi.webrtc.v1\"A\n" +
	"\x11ShakeHandResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"9\n" +
	"\tShakeHand\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04nameB6Z4github.com/bitcoin-sv/KeyRTCServer/api_webrtc/gen/v1b\x06proto3"

var (
	file_ws_shake_hand_proto_rawDescOnce sync.Once
	file_ws_shake_hand_proto_rawDescData []byte
)

func file_ws_shake_hand_proto_rawDescGZIP() []byte {
	file_ws_shake_hand_proto_rawDescOnce.Do(func() {
		file_ws_shake_hand_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ws_shake_hand_proto_rawDesc), len(file_ws_shake_hand_proto_rawDesc)))
	})
	return file_ws_shake_hand_proto_rawDescData
}

var file_ws_shake_hand_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ws_shake_hand_proto_goTypes = []any{
	(*ShakeHandResponse)(nil), // 0: api.webrtc.v1.ShakeHandResponse
	(*ShakeHand)(nil),         // 1: api.webrtc.v1.ShakeHand
}
var file_ws_shake_hand_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ws_shake_hand_proto_init() }
func file_ws_shake_hand_proto_init() {
	if File_ws_shake_hand_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ws_shake_hand_proto_rawDesc), len(file_ws_shake_hand_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ws_shake_hand_proto_goTypes,
		DependencyIndexes: file_ws_shake_hand_proto_depIdxs,
		MessageInfos:      file_ws_shake_hand_proto_msgTypes,
	}.Build()
	File_ws_shake_hand_proto = out.File
	file_ws_shake_hand_proto_goTypes = nil
	file_ws_shake_hand_proto_depIdxs = nil
}
